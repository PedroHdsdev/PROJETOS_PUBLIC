/*CREATE TRIGGER TRG_COMPRA_UPDT
ON COMPRA
AFTER UPDATE
AS
BEGIN
DECLARE @FUN_ID		INT,
		@USUARIO	VARCHAR (20),
		
SELECT @FUN_ID = FUN_ID FROM inserted

SELECT @USUARIO = FUN_USUARIO FROM FUNCIONARIO WHERE FUN_ID = @FUN_ID


INSERT INTO INFORMACOES (NOME_INF,DATA_INF,ACAO_INF,LOCAL_INF,TABELA_INF,REFERENTE_INF)
VALUES (@USUARIO,GETDATE(),'ALTEROU',@FAB,'COMPRA',@FOR)

END
*/

CREATE TRIGGER TRG_COMPRAS_UPDATE
ON COMPRAS
AFTER UPDATE
AS
BEGIN
    DECLARE @COM_STATUS VARCHAR(50),
			@QUANT INT;

    SELECT @COM_STATUS = I.COM_STATUS, @QUANT = I.QUANT_COMPRADA FROM inserted I;
    IF @COM_STATUS IS NOT NULL AND @COM_STATUS = 'ENTREGUE'
    BEGIN
        UPDATE MATERIA_PRIMA
        SET MP_QUANTIDADE = MP_QUANTIDADE + i.QUANT_COMPRADA
        FROM MATERIA_PRIMA
        INNER JOIN inserted i ON MATERIA_PRIMA.MP_ID = i.MP_ID
        INNER JOIN deleted d ON MATERIA_PRIMA.MP_ID = d.MP_ID
        WHERE i.STATUS = 'ENTREGUE'  -- Substitua 'NovoStatus' pelo status desejado
          AND d.STATUS <> 'COMPRADO'; -- Substitua 'NovoStatus' pelo status antigo
    END
END;

CREATE TRIGGER TRG_COMPRAS_INST
ON COMPRAS
AFTER INSERT
AS
BEGIN
DECLARE FUN_ID		INT,
		@USUARIO	VARCHAR (20),
		
SELECT @FUN_ID = FUN_ID FROM inserted

SELECT @USUARIO = FUN_USUARIO FROM FUNCIONARIO WHERE FUN_ID = @FUN_ID
SELECT @FOR = NOME_FOR,@QUANT = COM_QUANTIDADE FROM COMPRAS WHERE COM_ID = @COM_ID

INSERT INTO HISTORICO_MATERIA_PRIMA(NOME_INF,DATA_INF,ACAO_INF,LOCAL_INF,TABELA_INF,REFERENTE_INF)
VALUES (@USUARIO,GETDATE(),'CADASTRO',@FAB,'COMPRA',@FOR)

END

ALTER TRIGGER TRG_COMPRA_DLT
ON COMPRA
AFTER DELETE
AS
BEGIN
DECLARE @ID_ALT		INT
		
SELECT @ID_ALT = MAX(ID_INF) FROM INFORMACOES WHERE TABELA_INF = 'COMPRA' AND ACAO_INF = 'DELETOU'

UPDATE INFORMACOES SET ACAO_INF = 'DELETO' WHERE ID_INF = @ID_ALT

END